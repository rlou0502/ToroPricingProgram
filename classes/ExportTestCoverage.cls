public class ExportTestCoverage{
    private Map<String, String> cpqClasses = new Map<String, String> {
		'CMnQuoteUtil'=>'Roy',
        'CMnQuoteUtilTest'=>'Roy',
        'FieldSetMember'=>'Roy',
        'FieldSetMemberTest'=>'Roy',
        'KMnQuoteLifeCycleReadOnlyPriceProgram'=>'Roy',
        'KMnQuoteLifeCycleSelectPriceProgram'=>'Roy',
        'PP_UpdateExtensionTest'=>'Roy',
        'PP_CanadianCurrencyChange'=>'Roy',
		'PP_CreateQIExtension'=>'Roy',
		'PP_CreateQISLExtension'=>'Roy',
		'PP_PricingProgramDelete'=>'Roy',
		'PP_QIExtensionCreated'=>'Roy',
		'PP_QISLExtensionCreated'=>'Roy',
		'PP_QuoteCloningDone'=>'Roy',
		'PP_QuoteItemDelete'=>'Roy',
		'PP_QuoteItemSublineDelete'=>'Roy',
		'PP_Stratgy4Update'=>'Roy',
		'PP_Stratgy5Update'=>'Roy',
		'PP_UpdateQIExtension'=>'Roy',
		'PP_UpdateQISLExtension'=>'Roy',
		'PP_UpdateStrategy1'=>'Roy',
        'QuoteItem'=>'Roy',
        'QuoteItemTest'=>'Roy',
        'SetQuoteCurrencyISOCode'=>'Roy',
        'SetQuoteCurrencyISOCodeRunOnce'=>'Roy',
        'ToroBaseAwardAccessoryHelper'=>'Roy',
        'ToroBaseWithValueDollarHelper'=>'Scott',
        'ToroBaseWithValueDollarHelperTest'=>'Scott',
        'ToroCacheManager'=>'Roy',
        'ToroCascadingDeleteTest'=>'Roy',
        'ToroChartABPricingProgramHelper'=>'Roy',
        'ToroChartABPricingProgramHelperTest'=>'Roy',
        'ToroContractChartPPHelper'=>'Roy',
        'ToroContractChartPPHelperTest'=>'Roy',
        'ToroContractPriceListPPHelper'=>'Roy',
        'ToroContractPriceListPPHelperTest'=>'Roy',
        'ToroContractQuantityPPHelper'=>'Roy',
        'ToroContractQuantityPPHelperTest'=>'Roy',
        'ToroCustomExceptionData'=>'Roy',
        'ToroDefaultPricingProgramHelper'=>'Roy',
        'ToroExportToExcelMultipleSheets'=>'Roy',
        'ToroFirstTeePricingProgramHelper'=>'Roy',
        'ToroGSAPricingProgramHelper'=>'Roy',
        'ToroGenModelBOM'=>'Roy',
        'ToroPricingHook'=>'Indra',
        'ToroPostConfigPricingHook'=>'Indra',
        'ToroInfoBoxResultSet'=>'Roy',
        'ToroKemperSportsPricingProgramHelper'=>'Scott',
        'ToroKemperSportsPricingProgramHelperTest'=>'Scott',
        'ToroLargePackagePricingProgramHelper'=>'Roy',
        'ToroLargePackagePricingProgramHelperTest'=>'Roy',
        'ToroNTController'=>'Scott',
        'ToroNTControllerTest'=>'Scott',
        'ToroNTData'=>'Scott',
        'ToroNTDataTest'=>'Scott',
        'ToroNationAccountNAFPPHelper'=>'Roy',
        'ToroNationAccountNAFPPHelperTest'=>'Roy',
        'ToroNationalAccountArmyHelper'=>'Roy',
        'ToroNationalAccountArmyHelperTest'=>'Roy',
        'ToroNationalAccountGSAPPHelper'=>'Roy',
        'ToroNationalAccountGSAPPHelperTest'=>'Roy',
        'ToroNationalAccountPricingProgramHTest'=>'Scott',
        'ToroNationalAccountPricingProgramHelper'=>'Scott',
        'ToroPerformancePartCache'=>'Roy',
        'ToroPerformancePartPricingProgramHTest'=>'Scott',
        'ToroPerformancePartPricingProgramHelper'=>'Scott',
        'ToroPriceProgramFactory'=>'Roy',
        'ToroPriceProgramFactoryTest'=>'Roy',
        'ToroPricingMethodData'=>'Roy',
        'ToroPricingMethodDataTest'=>'Roy',
        'ToroPricingMethodHelper'=>'Roy',
        'ToroPricingMethodHelperTest'=>'Roy',
        'ToroPricingProgram'=>'Roy',
        'ToroPricingProgramCache'=>'Roy',
        'ToroPricingProgramCacheTest'=>'Roy',
        'ToroPricingProgramController'=>'Roy',
        'ToroPricingProgramControllerTest'=>'Roy',
        'ToroPricingProgramData'=>'Roy',
        'ToroPricingProgramDataTest'=>'Roy',
        'ToroPricingProgramEligibility'=>'Roy',
        'ToroPricingProgramEligibilityTest'=>'Roy',
        'ToroPricingProgramHelperCache'=>'Roy',
        'ToroPricingProgramInfoBoxController'=>'Roy',
        'ToroPricingProgramInfoBoxControllerTest'=>'Roy',
        'ToroPricingProgramLineProdSel'=>'Scott',
        'ToroPricingProgramLineProdSelTest'=>'Scott',
        'ToroPricingProgramProdSel'=>'Scott',
        'ToroPricingProgramProdSelTest'=>'Scott',
        'ToroPricingProgramTest'=>'Roy',
        'ToroPricingProgramUtil'=>'Roy',
        'ToroPricingProgramUtilTest'=>'Roy',
        'ToroProductEligibilityPlugin'=>'Roy',
        'ToroProductEligibilityPluginTest'=>'Roy',
        'ToroQIBase'=>'Scott',
        'ToroQIBaseTest'=>'Scott',
        'ToroQIExtensionCreatedBatch'=>'Roy',
        'ToroQISLExtensionCreatedBatch'=>'Roy',
        'ToroQuoteCache'=>'Roy',
        'ToroQuoteItemEmailController'=>'Indra',
        'ToroQuoteItemExtensionHandler'=>'Roy',
        'ToroSObjectResultSet'=>'Roy',
        'ToroSecondaryPricingProgram'=>'Roy',
        'ToroSelectOption'=>'Roy',
        'ToroSelectPriceProgramController'=>'Roy',
        'ToroSouthernDemoPricingProgramHelper'=>'Roy',
        'ToroSouthernDemoPricingProgramHelperTest'=>'Roy',
        'ToroSouthernDemoSecondaryPricingProgram'=>'Roy',
        'ToroStateContractPricingProgramHTest'=>'Roy',
        'ToroStateContractPricingProgramHelper'=>'Roy',
        'ToroStateContractQtyModelHelper'=>'Roy',
        'ToroStateContractQtyModelHelperTest'=>'Roy',
        'ToroSupportPlusController'=>'Scott',
        'ToroSupportPlusControllerTest'=>'Scott',
        'ToroSupportPlusData'=>'Scott',
        'ToroSupportPlusDataTest'=>'Scott',
        'ToroSupportPlusHelper'=>'Scott',
        'ToroSupportPlusHelperTest'=>'Scott',
        'ToroSupportPlusItem'=>'Scott',
        'ToroSupportPlusItemTest'=>'Scott',
        'ToroTestData'=>'Scott',
        'ToroTriggerRunOnce'=>'Roy',
        'ToroBaseAwardAccessoryHelperTest'=>'Roy',
        'ToroCacheManagerTest'=>'Roy',
        'ToroExportToExcelMultipleSheetsTest'=>'Roy',
        'ToroStateContractModelQtyHelper'=>'Roy' };
    public CoverageWrap cw {get;set;}
    public ExportTestCoverage(){
        HttpRequest req = new HttpRequest();
        req.setHeader('Authorization', 'Bearer ' + UserInfo.getSessionID());
        req.setHeader('Content-Type', 'application/json');
        req.setEndpoint(URL.getSalesforceBaseURL().toExternalForm()+'/services/data/v33.0/tooling/query/?q=Select+id,ApexClassorTrigger.Name,NumLinesCovered,NumLinesUncovered+from+ApexCodeCoverageAggregate');
        req.setMethod('GET');
        Http h = new Http();
        HttpResponse res = h.send(req);
        if(res.getStatusCode() == 200){
            cw  = (CoverageWrap)JSON.deserialize(res.getBody(),CoverageWrap.class);
            system.debug('cw  '+cw  );
            List<Records> rs = new List<Records>();
            for(Records r : cw.records) {
                if(cpqClasses.keyset().contains(r.ApexClassOrTrigger.Name)) {
                	r.developer = cpqClasses.get(r.ApexClassOrTrigger.Name);
                	rs.add(r);    
                } else {
                	rs.add(r);   
                }   
            }
            cw.records = rs;
            cw.records.sort();
        }
    }
    
    public class Attributes {
        public String type;
        public String url;
    }

    public class Records implements Comparable {
        public Attributes attributes;
        public String Id;
        public ApexClassOrTrigger ApexClassOrTrigger {get;set;}
        public Integer NumLinesCovered {get;set;}
        public Integer NumLinesUncovered {get;set;}
        public String developer {get; set;}
        public Integer compareTo(Object compareTo) {
            Records compareToObj = (Records) compareTo;
            if(String.isBlank(this.developer)) {
            	this.developer='';	
            }
            if(String.isBlank(compareToObj.developer)) {
            	compareToObj.developer='';	
            }
            if(this.developer.compareTo(compareToObj.developer) == 0){
            	return this.ApexClassOrTrigger.Name.compareTo(compareToObj.ApexClassOrTrigger.Name);		
            } else {
            	return this.developer.compareTo(compareToObj.developer);
            }
            
        }
    }

    public class ApexClassOrTrigger {
        public Attributes attributes;
        public String Name{get;set;}
    }
    
    public class CoverageWrap{
        public Integer size;
        public Integer totalSize;
        public Boolean done;
        public Object queryLocator;
        public String entityTypeName;
        public List<Records> records{get;set;}
    }
}